package com.company;

public class Song {
    private String name;
    private double duration;

    public Song(String name, double duration) {
        this.name = name;
        this.duration = duration;
    }

    public String getName() {
        return name;
    }

    public double getDuration() {
        return duration;
    }

    @Override
    public String toString() {
        return "Song{" +
                "name='" + name + '\'' +
                ", duration=" + duration +
                '}';
    }
}


//////////
package com.company;

import java.util.ArrayList;
import java.util.LinkedList;

public class AlbumI {
    private  String name;
    private String artist;
   private SongList songList;

    public AlbumI(String name, String artist) {
        this.name = name;
        this.artist = artist;
        this.songList=new SongList();
    }


        public boolean addSong(String name, double duration) {

          return this.songList.addSong(new Song(name, duration));

        }


        public boolean addToPlayList(int trackNumber, LinkedList<Song> playList) {
            Song songFind = songList.findSong(trackNumber);
            if (songFind != null) {
                playList.add(songFind);
                return true;
            }
            System.out.println("Not in your list of song");
            return false;
        }

        public boolean addToPlayList(String title, LinkedList<Song> playList) {
            Song checkedSong = songList.findSong(title);
            if (checkedSong != null) {
                playList.add(checkedSong);
                return true;
            }
            System.out.println("The song " + title + " is not in this album");
            return false;
        }



        public class SongList {
            private ArrayList<Song> listSong;

            public SongList() {
                this.listSong = new ArrayList<Song>();
            }


            public boolean addSong(Song song){
                       if(listSong.contains(song)){
                           System.out.println("Song already in list song");
                           return false;
                       }
                       listSong.add(song);
                       return true;
            }

            public Song findSong(String name){
                    for(Song check :this.listSong){
                        String checkN=check.getName();
                        if(checkN.equals(name))
                            return check;
                    }
                   return null;
            }

            public Song findSong(int trackNumber){
                int index=trackNumber-1;
                if((index>=0)&& (index<listSong.size())){
                  return   listSong.get(index);
                }
                return null;
            }

        }

    }
    
    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    
    package com.company;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Scanner;

public class Main {
    private static ArrayList<AlbumI> albums = new ArrayList<AlbumI>();
    public static void main(String[] args) {
        AlbumI album = new AlbumI("Stormbringer", "Deep Purple");

        album.addSong("Stormbringer", 4.6);
        album.addSong("Love don't mean a thing", 4.22);
        album.addSong("Holy man", 4.3);
        album.addSong("Hold on", 5.6);
        album.addSong("Lady double dealer", 3.21);
        album.addSong("You can't do it right", 6.23);
        album.addSong("High ball shooter", 4.27);
        album.addSong("The gypsy", 4.2);
        album.addSong("Soldier of fortune", 3.13);
        albums.add(album);

        album = new AlbumI("For those about to rock", "AC/DC");
        album.addSong("For those about to rock", 5.44);
        album.addSong("I put the finger on you", 3.25);
        album.addSong("Lets go", 3.45);
        album.addSong("Inject the venom", 3.33);
        album.addSong("Snowballed", 4.51);
        album.addSong("Evil walks", 3.45);
        album.addSong("C.O.D.", 5.25);
        album.addSong("Breaking the rules", 5.32);
        album.addSong("Night of the long knives", 5.12);
        albums.add(album);

        LinkedList<Song> playList = new LinkedList<Song>();
        albums.get(0).addToPlayList("You can't do it right", playList);
        albums.get(0).addToPlayList("Holy man", playList);
        albums.get(0).addToPlayList("Speed king", playList);  // Does not exist
        albums.get(0).addToPlayList(9, playList);
        albums.get(1).addToPlayList(8, playList);
        albums.get(1).addToPlayList(3, playList);
        albums.get(1).addToPlayList(2, playList);
        albums.get(1).addToPlayList(24, playList);  // There is no track 24

        play(playList);

    }

    public static void play(LinkedList<Song> playlist) {
        Scanner scanner = new Scanner(System.in);
        boolean quit = false;
        boolean forward = true;
        int choice = 0;
        ListIterator listIterator = playlist.listIterator();
        if (playlist.isEmpty()) {
            System.out.println("NO SONGS");
            return;
        } else {
            System.out.println("nOW YOU ARE LISTEN :" + listIterator.next().toString());
            printMenu();
        }

        while (!quit) {
            System.out.println("Enter your choice");
            choice = scanner.nextInt();
            scanner.nextLine();
            switch (choice) {
                case 0:
                    System.out.println("Playlist complete.");
                    quit = true;
                    break;
                case 1:
                    if (!forward) {
                        if (listIterator.hasNext()) {
                            listIterator.next();
                        }
                        forward = true;
                    }

                    if (listIterator.hasNext()) {
                        System.out.println("yOU NOW LISTEN:" + listIterator.next().toString());
                    } else {
                        System.out.println("End of playlist");
                        forward = false;
                    }
                    break;


                case 2:

                    if (forward) {
                        if (listIterator.hasPrevious())
                            listIterator.previous();
                    }
                    forward = false;

                    if (listIterator.hasPrevious()) {
                        System.out.println("yOU NOW LISTEN:" + listIterator.previous().toString());

                    } else {
                        System.out.println("yOU at first position in playlist");
                        forward = true;
                    }
                    break;

                case 3:
                    if (forward) {
                        if (listIterator.hasPrevious()) {
                            System.out.println("yOU NOW LISTEN:" + listIterator.previous().toString());
                            forward = false;
                        } else System.out.println("yOU at first position in playlist");
                    } else {
                        if (listIterator.hasNext()) {
                            System.out.println("yOU NOW LISTEN:" + listIterator.next().toString());
                            forward = true;
                        } else System.out.println("End of playlist");

                    }
                    break;

                case 4:
                    printSong(playlist);
                    break;

                case 5:
                    printMenu();
                    break;

                case 6:
                    if (playlist.size() > 0) {
                        listIterator.remove();
                        if (listIterator.hasNext())
                            System.out.println("Now playing " + listIterator.next());
                        else if (listIterator.hasPrevious())
                            System.out.println("Now playing " + listIterator.previous());
                    }
                    break;


            }

        }
    }

    public static void printMenu() {
        System.out.println("Available choice :\npress");
        System.out.println("O   to quit\n" +
                "1   to play nextsong\n" +
                "2 - to play previous song\n" +
                "3 - to replay the current song\n" +
                "4 - list songs in the playlist\n" +
                "5 - print available actions.\n" +
                "6 - delete current song from playlist");

    }

    public static  void printSong(LinkedList<Song> playlist){
      for (int i=0;i<playlist.size();i++)
{
    System.out.println(playlist.get(i).toString());

        }
    }

}
